// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户
model User {
  id        Int         @id @default(autoincrement())
  username  String      @unique
  nickName  String      @default("新用户") @map("nick_name")
  password  String
  avatar    String?
  email     String?
  createAt  DateTime    @default(now())
  updateAt  DateTime    @updatedAt
  roleChild RoleChild[]
  fileChild FileChild[]

  @@map("user")
}

// 角色
model Role {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  roleChild RoleChild[]
  menuChild MenuChild[]

  @@map("role")
}

// 角色管理
model RoleChild {
  id Int @id @default(autoincrement())

  Role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId Int
  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@map("role_child")
}

// 菜单
model Menu {
  id   Int    @id @default(autoincrement())
  name String @unique

  menuChild MenuChild[]

  @@map("menu")
}

// 菜单管理
model MenuChild {
  id     Int  @id @default(autoincrement())
  Menu   Menu @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menuId Int
  Role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId Int

  @@map("menu_child")
}

// 文件管理
model FileChild {
  id      Int    @id @default(autoincrement())
  url     String
  oldName String @map("old_name")
  newName String @map("new_name")
  type    String
  User    User   @relation(fields: [userId], references: [id])
  userId  Int

  @@map("file_child")
}
